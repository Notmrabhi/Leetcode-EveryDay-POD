/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void checkforleafvaluesequence(TreeNode* root2, vector<int> &tree2){

        if(root2 == nullptr) return;
        
        if(root2->left == nullptr && root2->right == nullptr) {
            tree2.push_back(root2->val);
            return;
            }
        checkforleafvaluesequence(root2->left, tree2);
        checkforleafvaluesequence(root2->right, tree2);
        
    }

    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> tree1, tree2;

        

        checkforleafvaluesequence(root1, tree1);
        checkforleafvaluesequence(root2, tree2);
        
        return tree1 == tree2;
    }
};
